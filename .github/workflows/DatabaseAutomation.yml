name:  Database automation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  setup-database:
    runs-on: ubuntu-latest  

    steps:
      
      - name: Checkout repository
        uses: actions/checkout@v3

      
      - name: Add Microsoft repository for SQL Server tools
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
          sudo apt-get update

      
      - name: Install SQL Server client
        run: sudo apt-get install -y mssql-tools unixodbc-dev

      
      - name: Add SQL Server tools to PATH
        run: echo "/opt/mssql-tools/bin" >> $GITHUB_PATH

      
      - name: Test Connection to SQL Server
        env:
          ADMIN_USER: ${{ secrets.ADMIN_USER }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
        run: |
          sqlcmd -S "${{ secrets.PINGGY_URL }}" -U "$ADMIN_USER" -P "$ADMIN_PASSWORD" -C -Q "SELECT @@VERSION" || echo "Connection failed: check server, user, or password"

     
      - name: Setup Database, User, Table, Procedure, and Data
        env:
          ADMIN_USER: ${{ secrets.ADMIN_USER }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
        run: |
          sqlcmd -S "${{ secrets.PINGGY_URL }}" -U "$ADMIN_USER" -P "$ADMIN_PASSWORD" -C -i "scripts/setup.sql"

      
      - name: Test Connection and Data
        run: |
          sqlcmd -S "${{ secrets.PINGGY_URL }}" -U Auto_user -P "${{ secrets.SQL_PASSWORD }}" -C -d AutoTest -Q "SELECT * FROM [dbo].[user];"
