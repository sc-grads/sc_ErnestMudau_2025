name: Setup SQL Database with Stored Procedure

on:
  push:
    branches:
      - main

jobs:
  setup-database:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install SQL Server CLI (sqlcmd)
        run: |
          sudo apt-get update
          sudo apt-get install -y mssql-tools unixodbc-dev

      - name: Install jq (for JSON parsing)
        run: sudo apt-get install -y jq

      - name: Install ngrok
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt update && sudo apt install ngrok

      - name: Start ngrok
        run: |
          ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
          nohup ngrok tcp 1433 > /dev/null 2>&1 &
          sleep 10s  # Wait for ngrok to initialize

      - name: Get ngrok Public URL
        id: ngrok_url
        run: |
          NGROK_FULL_URL=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          NGROK_HOST=$(echo $NGROK_FULL_URL | cut -d':' -f1 | sed 's/tcp:\/\///')
          NGROK_PORT=$(echo $NGROK_FULL_URL | cut -d':' -f2)
          echo "NGROK_HOST=$NGROK_HOST" >> $GITHUB_ENV
          echo "NGROK_PORT=$NGROK_PORT" >> $GITHUB_ENV

      - name: Run SQL Script
        run: |
          sqlcmd -S ${{ env.NGROK_HOST }},${{ env.NGROK_PORT }} -U Auto_user -P ${{ secrets.YOUR_SQL_PASSWORD }} -i setup.sql
