name: SSIS Deployment with Windows Auth

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy-ssis:
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Verify SQL Server Connection
        shell: powershell
        run: |
          $sqlServer = "LAPTOP-7LSAQSR0"
          
          # Test basic SQL Server connectivity
          try {
              $result = Test-NetConnection -ComputerName $sqlServer -Port 1433
              if (-not $result.TcpTestSucceeded) {
                  Write-Error "Cannot connect to SQL Server on port 1433"
                  exit 1
              }
              Write-Host "Network connection to SQL Server successful"
          } catch {
              Write-Error "Network connection test failed: $_"
              exit 1
          }
          
          # Test Windows Authentication access
          try {
              $dbCheck = sqlcmd -S $sqlServer -Q "SELECT name FROM sys.databases WHERE name = 'SSISDB'" -E -h -1 -W
              if ($dbCheck -ne "SSISDB") {
                  Write-Error "SSISDB database not found or accessible"
                  exit 1
              }
              Write-Host "Windows Authentication to SSISDB successful"
          } catch {
              Write-Error "Windows Authentication failed: $_"
              Write-Host "Troubleshooting tips:"
              Write-Host "1. Ensure the runner service account has SQL Server access"
              Write-Host "2. Check SQL Server logs for login failures"
              Write-Host "3. Verify SQL Server allows Windows Authentication"
              exit 1
          }

      - name: Create SSIS Folder
        shell: powershell
        run: |
          $sqlServer = "LAPTOP-7LSAQSR0"
          $folderName = "TimesheetFolder"
          
          # Check and create folder with Windows Auth
          try {
              $exists = sqlcmd -S $sqlServer -d "SSISDB" -Q "SELECT COUNT(*) FROM catalog.folders WHERE name = '$folderName'" -E -h -1 -W
              if ([int]$exists -eq 0) {
                  Write-Host "Creating folder '$folderName'..."
                  sqlcmd -S $sqlServer -d "SSISDB" -Q "EXEC catalog.create_folder @folder_name = '$folderName'" -E
                  Write-Host "Folder created successfully"
              } else {
                  Write-Host "Folder already exists"
              }
          } catch {
              Write-Error "Folder creation failed: $_"
              exit 1
          }

      - name: Deploy Packages
        shell: powershell
        run: |
          $packagePath = "$env:GITHUB_WORKSPACE\HandsOnProjects\Timesheet\TimesheetMigrationProject"
          $catalogServer = "LAPTOP-7LSAQSR0"
          $folderName = "TimesheetFolder"
          
          if (-not (Test-Path $packagePath)) {
              Write-Error "Package path not found: $packagePath"
              exit 1
          }
          
          Get-ChildItem -Path $packagePath -Filter *.dtsx | ForEach-Object {
              $package = $_.BaseName
              Write-Host "Deploying $package..."
              
              & "C:\SSISDevOpsTools\SSISDeploy.exe" `
                  -source:"$($_.FullName)" `
                  -destination:"catalog;/SSISDB/$folderName/$package;$catalogServer" `
                  -authType:"winAuth" `
                  -log:"DIAG;$env:GITHUB_WORKSPACE\deploy-$package.log"
              
              if ($LASTEXITCODE -ne 0) {
                  Write-Error "Package $package deployment failed"
                  Get-Content "$env:GITHUB_WORKSPACE\deploy-$package.log" | Write-Host
                  exit $LASTEXITCODE
              }
              Write-Host "$package deployed successfully"
          }
